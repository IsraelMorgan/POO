import java.util.*; 
import java.io.*; 
public class Simpson1
{
   private static double matriz[][];
   public static double funcion(double x){ 
     double funcion= (Math.pow(x,3)-Math.sin(x)*Math.pow(x,2)+0.8);
     return funcion; 
   }
   
   public static void main(String[] args)throws FileNotFoundException,IOException{
     System.out.println("        // INTEGRACIÓN POR SIMPSON 1/3  //   \n "); 
     while(true){ 
       Scanner lee = new Scanner(System.in);
       System.out.println("1.- SIMPSON 1/3 FUNCION.\n2.- SIMPSON 1/3 PUNTOS EXPERIMENTALES ");
       int n= Integer.parseInt(lee.nextLine());
       if(n==1){
         simpsonFuncion();
         return; 
       }else if(n==2){
         simpsonpuntos();
         return; 
       }else{
         System.out.println("ELIGE UNA OPCION CORRECTA!!"); 
       }
     }
   }
   
   public static void simpsonFuncion(){
      System.out.println("     // INTEGRACIÓN POR SIMPSON 1/3 FUNCION //");
      System.out.println("Limite inferior: ");
      Scanner lee = new Scanner(System.in);
      Scanner lee1 = new Scanner(System.in);
      double inferior= Double.parseDouble(lee.nextLine());
      System.out.println("Limite superior: ");
      double superior=  Double.parseDouble(lee.nextLine());
      System.out.println("número de sectores: ");
      int n=  Integer.parseInt(lee1.nextLine());
      double h= (superior-inferior)/n; 
      matriz = new double [n+1][2];
      int f=0; 
      for(int i=0; i<matriz.length; i++ ,f++){
         if(i==0){
          matriz[i][0]= inferior; 
        }else if(i==matriz.length-1){
           matriz[i][0]= superior; 
        }else{
          matriz[i][0]= matriz[i-1][0]+h;   
        }
      }
      for(int i=0; i<matriz.length; i++){
         matriz[i][1]=funcion(matriz[i][0]);
      }
      System.out.printf("%3s %3s %10s","","x","f(x) \n");
      for(int i=0; i<matriz.length; i++){
         for(int j=0; j<matriz[i].length; j++){
           System.out.printf("%s  %5f","",matriz[i][j]);
         }
         System.out.println(); 
      } 
      double integral=((h/3)*(funcion(inferior)+4*impares(matriz)+2*pares(matriz)+funcion(superior)));
      System.out.println("\n" + "La integral es: "+ integral);
   }
   
   private static double impares(double matriz[][]){
      double impar=0; 
      for(int i=1; i<matriz.length-1; i+=2){
         impar+= matriz[i][1]; 
      }
      return impar; 
   }
   
   private static double pares(double matriz[][]){
      double par=0; 
      for(int i=2; i<matriz.length-2; i+=2){
         par+=matriz[i][1]; 
      }
      return par; 
   }
   public static void simpsonpuntos()throws FileNotFoundException,IOException{
      double regresa[] = retorna();  
      int n=(regresa.length)/2; 
      double matriz[][] = new double[n][2]; 
      int itera=0; 
      for (int j = 0; j < 2; j++) {
        for (int i = 0; i < n; i++) {
          matriz[i][j] = regresa[itera];
          itera++;
        }
      }
      System.out.println("    INTEGRACIÓN POR SIMPSON 1/3 PUNTOS EXPERIMENTALES   " + "\n");
      System.out.println("     //TABLA DE VALORES// ");
      System.out.printf("%9s %8s","x","y" + "\n");
      for(int i=0; i<matriz.length; i++){
       for(int j=0; j<matriz[i].length; j++){
          System.out.printf("%4s %f","",matriz[i][j]);
       }
       System.out.println(); 
      } 
      
      System.out.println("número de sectores: ");
      Scanner lee2 = new Scanner(System.in);  
      int x= Integer.parseInt(lee2.nextLine());
      double a= matriz[0][1]; 
      double b= matriz[matriz.length-1][1]; 
      double h= (matriz[1][0]-matriz[0][0])/n;  
      double integral=((h/3)*(a+4*impares(matriz)+2*pares(matriz)+b));
      System.out.println("\n" + "La integral es: "+ integral);
   }
   
   private static int contar()throws FileNotFoundException,IOException{
     String sCadena; 
     FileReader fr = new FileReader("puntos.txt");
     BufferedReader bf = new BufferedReader(fr); 
     int a=0; 
     while((sCadena =(bf.readLine()))!=null ){ 
        a++;
     }
     return a; 
   }
   private static double[] retorna()throws FileNotFoundException,IOException{
      double vector[];
      vector = new double [contar()];
      int a=0; 
      String sCadena; 
      FileReader fr = new FileReader("puntos.txt");
      BufferedReader bf = new BufferedReader(fr); 
      while((sCadena =(bf.readLine()))!=null && a<vector.length ){ 
        double  num= Double.parseDouble(sCadena); 
        vector[a]= num; 
        a++;
      }
      return vector; 
   }
}
